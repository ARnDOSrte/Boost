name: Compil_Centos7_Boost

on: [push]

defaults:
  run:
    shell: bash

jobs:
  compilation:
    name: Compil
    runs-on: ubuntu-latest
    container: 'centos:centos7'
    steps:
      - name: Install Dependancies
        run: |
          yum update -y
          yum install -y epel-release
          yum install -y git redhat-lsb-core make wget centos-release-scl scl-utils
          yum install -y devtoolset-9

      - name: Setup cmake
        uses: jwlawson/actions-setup-cmake@v1.13
        with:
          cmake-version: '3.22.x'
      
      - name: Checkout sources
        uses: actions/checkout@v1

      - name: Install boost
        run: |  
          source /opt/rh/devtoolset-9/enable
          wget https://boostorg.jfrog.io/artifactory/main/release/1.73.0/source/boost_1_73_0.tar.gz
          tar -xzvf ./boost_1_73_0.tar.gz
          cd boost_1_73_0
          ./bootstrap.sh --prefix=installBoost
          ./b2 install --without-python -j 5
          ls
          cd ..
      
      - name: Prepare zip
        id: b2
        run: |
          ARCHIVE_NAME="boost_1_73_0.zip"
          ARCHIVE_PATH="$PWD/${ARCHIVE_NAME}"
          zip -r $ARCHIVE_PATH /__w/Boost/Boost/boost_1_73_0/installBoost
          echo "::set-output name=archive_name::$ARCHIVE_NAME"
          echo "::set-output name=archive_path::$ARCHIVE_PATH"
          echo $ARCHIVE_PATH
      
      - name: Upload OR-Tools install artifact
        uses: actions/upload-artifact@v3
        with:
          name: ${{ steps.b2.outputs.archive_name }}
          path: ${{ steps.b2.outputs.archive_path }}
  
  publish_asset:
    name: Publish release assets
    needs: compilation
    runs-on: ubuntu-latest
    if: "contains(github.ref, 'tag')"
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v3
        with:
          name: boost_1_73_0.zip
          path: ./

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.COMPIL_BOOST }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false
      
      - name: Upload Release Asset
        id: upload-release-asset 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.COMPIL_BOOST }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
          asset_path: boost_1_73_0.zip
          asset_name: boost_1_73_0.zip
          asset_content_type: application/zip
            
          